// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

namespace WebAPI.Migrations
{
    [DbContext(typeof(ToDoDbContext))]
    partial class ToDoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI.Models.ToDo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Completed");

                    b.Property<string>("Name");

                    b.Property<int>("ToDoListID");

                    b.HasKey("ID");

                    b.HasIndex("ToDoListID");

                    b.ToTable("ToDos");

                    b.HasData(
                        new { ID = 1, Completed = false, Name = "Vacuum the carpet", ToDoListID = 1 },
                        new { ID = 2, Completed = false, Name = "Mop the floors", ToDoListID = 1 },
                        new { ID = 3, Completed = true, Name = "Finish some labs", ToDoListID = 2 }
                    );
                });

            modelBuilder.Entity("WebAPI.Models.ToDoList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("ToDoList");

                    b.HasData(
                        new { ID = 1, Name = "Chores" },
                        new { ID = 2, Name = "Programming" }
                    );
                });

            modelBuilder.Entity("WebAPI.Models.ToDo", b =>
                {
                    b.HasOne("WebAPI.Models.ToDoList", "ToDoList")
                        .WithMany("ToDos")
                        .HasForeignKey("ToDoListID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
